name: CI

on:
  push:
    branches: [ main ]
    tags: [ "*" ]
  pull_request:
    branches: [ main ]

jobs:
  imu-mocap-viewer:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: # [ name, platform ]
          - [ macOS, StandaloneOSX ]
          - [ windows, StandaloneWindows64 ]
          - [ ubuntu, StandaloneLinux64 ]
    
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v3
        with:
          path: "IMU Mocap Viewer/Library"
          key: Library-${{ matrix.target[1] }}
          restore-keys: Library-

      - uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: "./IMU Mocap Viewer"
          targetPlatform: ${{ matrix.target[1] }}
          allowDirtyBuild: true
          buildsPath: "build/"
          buildName: 'IMU Mocap Viewer'
          versioning: Custom
          version: '0.0.0'

      - uses: actions/upload-artifact@v4
        with:
          name: IMU-Mocap-Viewer-${{ matrix.target[0] }}
          path: |
            build/${{ matrix.target[1] }}
            !build/${{ matrix.target[1] }}/*DoNotShip

  windows-installer:
    runs-on: windows-latest
    needs: build

    steps:
      - uses: actions/checkout@v4

      - name: Download from artifacts
        uses: actions/download-artifact@v4
        with:
          name: "StandaloneWindows64"
          path: files

      - name: Create installer
        run: |
          & "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" WindowsInstaller.iss        

      - uses: actions/upload-artifact@v4
        with:
          name: IMU-Mocap-Viewer-Setup.exe
          path: Output/IMU-Mocap-Viewer-Setup.exe
